<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
grav = 0.2;
//horizontal speed
hsp = 0;
//vertical speed
vsp = 0;
jumpspeed = 5;
movespeed = 4;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    //Get the player's input
key_right = keyboard_check(vk_right);
//the - means its going to equal a -1 or a 0
key_left = -keyboard_check(vk_left);
//pressed checks if the button was pressed when it wasnt pressed before
key_jump = keyboard_check_pressed(vk_space);

//react to inputs
move = key_left + key_right;
//because they are both being pushed -1 + 1 = zero
//horizontal move speed, multiplied by movespeed which =4
hsp = move * movespeed;
//less than 10 vsp to keep from moving too fast
if (vsp &lt; 10) vsp += grav;
//will add the 0.2 over itself up till 10

//jump button
if (place_meeting (x,y+1,obj_wall))
    {vsp = key_jump * -jumpspeed
    }

// Vertical
repeat(abs(vsp)) {
    if (!place_meeting(x, y + sign(vsp), obj_wall))
        y += sign(vsp); 
    else {
        vsp = 0;
        break;
    }
}

// Horizontal
repeat(abs(hsp)) {
// Move up slope
  if (place_meeting(x + sign(hsp), y, obj_wall) &amp;&amp; place_meeting(x + sign(hsp), y - 1, obj_wall) &amp;&amp; !place_meeting(x + sign(hsp), y - 2, obj_wall))
        y -= 2;
    else
    if (place_meeting(x + sign(hsp), y, obj_wall) &amp;&amp; !place_meeting(x + sign(hsp), y - 1, obj_wall))
        --y;
    
    // Move down slope
     if (!place_meeting(x + sign(hsp), y, obj_wall) &amp;&amp; !place_meeting(x + sign(hsp), y + 1, obj_wall) &amp;&amp; !place_meeting(x + sign(hsp), y + 2, obj_wall) &amp;&amp; place_meeting(x + sign(hsp), y + 3, obj_wall))
        y += 2;
    else
    if (!place_meeting(x + sign(hsp), y, obj_wall) &amp;&amp; !place_meeting(x + sign(hsp), y + 1, obj_wall) &amp;&amp; place_meeting(x + sign(hsp), y + 2, obj_wall))
        ++y; 
    if (!place_meeting(x + sign(hsp), y, obj_wall))
        x += sign(hsp); 
    else {
        hsp = 0;
        break;
    }
}
//end slope code


if (place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall))
    {
        x+= sign(hsp);
    }
    hsp = 0;
} 
/*
Peter - Unnecessary Code:

//after working all this above code out, now adding the values to our object.  
x += hsp;   this part right here makes you fly off slopes - Peter


//vertical collison
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y+= sign(vsp);
    }
    vsp = 0;
} 

y += vsp;
*/


//change direction based on where its facing
if (sign(hsp) != 0)
    {
    image_xscale = sign(hsp);
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>0</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
